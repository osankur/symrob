aag 278 5 17 1 256
2
4
6
8
10
12 1
14 173
16 269
18 317
20 365
22 389
24 413
26 437
28 461
30 473
32 485
34 497
36 509
38 521
40 533
42 545
44 557
46
46 15 12
48 16 12
50 48 4
52 18 12
54 52 5
56 55 51
58 57 6
60 20 12
62 60 4
64 22 12
66 64 5
68 67 63
70 69 7
72 71 59
74 73 8
76 24 12
78 76 4
80 26 12
82 80 5
84 83 79
86 85 6
88 28 12
90 88 4
92 30 12
94 92 5
96 95 91
98 97 7
100 99 87
102 101 9
104 103 75
106 105 10
108 32 12
110 108 4
112 34 12
114 112 5
116 115 111
118 117 6
120 36 12
122 120 4
124 38 12
126 124 5
128 127 123
130 129 7
132 131 119
134 133 8
136 40 12
138 136 4
140 42 12
142 140 5
144 143 139
146 145 6
148 44 12
150 148 4
152 47 5
154 153 151
156 155 7
158 157 147
160 159 9
162 161 135
164 163 11
166 165 107
168 167 2
170 47 3
172 171 169
174 52 4
176 60 5
178 177 175
180 179 6
182 64 4
184 76 5
186 185 183
188 187 7
190 189 181
192 191 8
194 80 4
196 88 5
198 197 195
200 199 6
202 92 4
204 108 5
206 205 203
208 207 7
210 209 201
212 211 9
214 213 193
216 215 10
218 112 4
220 120 5
222 221 219
224 223 6
226 124 4
228 136 5
230 229 227
232 231 7
234 233 225
236 235 8
238 140 4
240 148 5
242 241 239
244 243 6
246 47 4
248 48 5
250 249 247
252 251 7
254 253 245
256 255 9
258 257 237
260 259 11
262 261 217
264 263 2
266 48 3
268 267 265
270 69 6
272 85 7
274 273 271
276 275 8
278 97 6
280 117 7
282 281 279
284 283 9
286 285 277
288 287 10
290 129 6
292 145 7
294 293 291
296 295 8
298 155 6
300 57 7
302 301 299
304 303 9
306 305 297
308 307 11
310 309 289
312 311 2
314 52 3
316 315 313
318 187 6
320 199 7
322 321 319
324 323 8
326 207 6
328 223 7
330 329 327
332 331 9
334 333 325
336 335 10
338 231 6
340 243 7
342 341 339
344 343 8
346 251 6
348 179 7
350 349 347
352 351 9
354 353 345
356 355 11
358 357 337
360 359 2
362 60 3
364 363 361
366 101 8
368 133 9
370 369 367
372 371 10
374 159 8
376 73 9
378 377 375
380 379 11
382 381 373
384 383 2
386 64 3
388 387 385
390 211 8
392 235 9
394 393 391
396 395 10
398 255 8
400 191 9
402 401 399
404 403 11
406 405 397
408 407 2
410 76 3
412 411 409
414 283 8
416 295 9
418 417 415
420 419 10
422 303 8
424 275 9
426 425 423
428 427 11
430 429 421
432 431 2
434 80 3
436 435 433
438 331 8
440 343 9
442 441 439
444 443 10
446 351 8
448 323 9
450 449 447
452 451 11
454 453 445
456 455 2
458 88 3
460 459 457
462 163 10
464 105 11
466 465 463
468 467 2
470 92 3
472 471 469
474 259 10
476 215 11
478 477 475
480 479 2
482 108 3
484 483 481
486 307 10
488 287 11
490 489 487
492 491 2
494 112 3
496 495 493
498 355 10
500 335 11
502 501 499
504 503 2
506 120 3
508 507 505
510 379 10
512 371 11
514 513 511
516 515 2
518 124 3
520 519 517
522 403 10
524 395 11
526 525 523
528 527 2
530 136 3
532 531 529
534 427 10
536 419 11
538 537 535
540 539 2
542 140 3
544 543 541
546 451 10
548 443 11
550 549 547
552 551 2
554 148 3
556 555 553
i0 controllable_do_shift
i1 sh_0_
i2 sh_1_
i3 sh_2_
i4 sh_3_
l0 benchn13
l1 benchr_0__out
l2 benchr_1__out
l3 benchr_2__out
l4 benchr_3__out
l5 benchr_4__out
l6 benchr_5__out
l7 benchr_6__out
l8 benchr_7__out
l9 benchr_8__out
l10 benchr_9__out
l11 benchr_10__out
l12 benchr_11__out
l13 benchr_12__out
l14 benchr_13__out
l15 benchr_14__out
l16 benchr_15__out
o0 err
c
bench
This file was written by ABC on Sat Aug 31 20:25:11 2013
For information about AIGER format, refer to http://fmv.jku.at/aiger
-------------------------------
This AIGER file has been created by the following sequence of commands:
> vl2mv bs16.v   ---gives--> bs16.mv
> abc -c "read_blif_mv bs16.mv; strash; refactor; rewrite; dfraig; rewrite; dfraig; write_aiger -s bs16y.aig"   ---gives--> bs16y.aig
> aigtoaig bs16y.aig bs16y.aag   ---gives--> bs16y.aag (this file)
Content of bs16.v:
module bench(clk, sh, controllable_do_shift, err);
  input clk;
  input [3:0] sh;
  input controllable_do_shift;
  output err;
  reg[15:0] r;

  wire[15:0] shifted;
  barrel b(r,shifted,sh);

  assign err = ~r[0];

  initial
  begin
    r = 1;
  end

  always @ (posedge clk)
  begin
    r = controllable_do_shift ? shifted : r;
  end
endmodule
  
module barrel(i,o,s);
  input [15:0] i;
  output [15:0] o;
  input [3:0] s;
  wire [15:0] t1;
  wire [15:0] t2;
  wire [15:0] t3;
  
  assign t1 = s[0] ? {i[14:0],i[15:15]} : i;    // shift by 1 pos
  assign t2 = s[1] ? {t1[13:0],t1[15:14]} : t1; // shift by 2 pos
  assign t3 = s[2] ? {t2[11:0],t2[15:12]} : t2; // shift by 4 pos
  assign o  = s[3] ? {t3[7:0],t3[15:8]} : t3; // shift by 8 pos
endmodule

-------------------------------
