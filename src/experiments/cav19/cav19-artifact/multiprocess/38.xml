<?xml version="1.0" encoding="utf-8"?><!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_1.dtd'>
<nta><declaration> 
chan go0,go1,go2; // Process i can start
chan release0;
chan release1; // Machine j can be freed
int[0,2] running0 = 0; // Machine 1 is running process running1. 3 means none
int[0,2] running1 = 0;

int[0,2] round = 0;
// Is process(i) waiting?
// This is redundant information but don't know how to
// simply access processes' locations
bool w0 = 1;
bool w1 = 1;
bool w2 = 1;

clock x0;
// int[0,1] mode0;

clock x1;
// int[0,1] mode1;

clock x2;
// int[0,1] mode2;
</declaration>
<template><name>Process0</name>
<declaration>bool Iin0;
bool Iin1;
bool Iin2;
bool Iin3;
bool Icontrollable_c0;
bool Icontrollable_c1;
bool Icontrollable_c2;
bool Icontrollable_c3;
bool Icontrollable_s;
bool Lbenchn21;
bool Lbenchbad_out;
bool Lbenchstate0_out;
bool Lbenchstate1_out;
bool Lbenchstate2_out;
bool Lbenchstate3_out;
</declaration>
<location id="loc5"><name>on0</name>
<label kind="invariant">x0 &lt;= 1000</label>
</location>
<location id="loc6"><name>on1</name>
<label kind="invariant">x0 &lt;= 2000</label>
</location>
<location id="loc0"><name>w</name>
</location>
<location id="loc1"><name>dead</name>
</location>
<location id="loc3"><name>up</name>
<committed/>
</location>
<location id="loc7"><name>JustSetIin0</name>
<committed/>
</location>
<location id="loc8"><name>JustSetIin1</name>
<committed/>
</location>
<location id="loc9"><name>JustSetIin2</name>
<committed/>
</location>
<location id="loc10"><name>JustSetIin3</name>
<committed/>
</location>
<location id="loc11"><name>JustSetIcontrollable_c0</name>
<committed/>
</location>
<location id="loc12"><name>JustSetIcontrollable_c1</name>
<committed/>
</location>
<location id="loc13"><name>JustSetIcontrollable_c2</name>
<committed/>
</location>
<location id="loc14"><name>JustSetIcontrollable_c3</name>
<committed/>
</location>
<location id="loc15"><name>JustSetIcontrollable_s</name>
<committed/>
</location>
<location id="loc16"><name>UpdatedLbenchn21</name>
<committed/>
</location>
<location id="loc17"><name>UpdatedLbenchbad_out</name>
<committed/>
</location>
<location id="loc18"><name>UpdatedLbenchstate0_out</name>
<committed/>
</location>
<location id="loc19"><name>UpdatedLbenchstate1_out</name>
<committed/>
</location>
<location id="loc20"><name>UpdatedLbenchstate2_out</name>
<committed/>
</location>
<location id="loc21"><name>UpdatedLbenchstate3_out</name>
<committed/>
</location>
<init ref="loc0"/>
<transition>
<source ref="loc0"/><target ref="loc5"/>
<label kind="synchronisation">go0?</label>
<label kind="assignment">x0:=0, w0:=0</label>
<label kind="guard">Lbenchstate0_out == 0</label>
</transition>
<transition>
<source ref="loc0"/><target ref="loc1"/>
<label kind="guard">Lbenchstate0_out == 0 &amp;&amp; x0 &gt; 9000</label>
</transition>
<transition>
<source ref="loc5"/><target ref="loc3"/>
<label kind="assignment">x0:=0</label>
<label kind="guard">Lbenchstate0_out == 0 &amp;&amp; x0 &gt;= 1000 &amp;&amp; x0 &lt;= 1000</label>
</transition>
<transition>
<source ref="loc0"/><target ref="loc6"/>
<label kind="synchronisation">go0?</label>
<label kind="assignment">x0:=0, w0:=0</label>
<label kind="guard">Lbenchstate0_out == 1</label>
</transition>
<transition>
<source ref="loc0"/><target ref="loc1"/>
<label kind="guard">Lbenchstate0_out == 1 &amp;&amp; x0 &gt; 18000</label>
</transition>
<transition>
<source ref="loc6"/><target ref="loc3"/>
<label kind="assignment">x0:=0</label>
<label kind="guard">Lbenchstate0_out == 1 &amp;&amp; x0 &gt;= 2000 &amp;&amp; x0 &lt;= 2000</label>
</transition>
<transition>
<source ref="loc3"/><target ref="loc7"/>
<label kind="assignment">Iin0 := 0</label>
</transition>
<transition>
<source ref="loc3"/><target ref="loc7"/>
<label kind="assignment">Iin0 := 1</label>
</transition>
<transition>
<source ref="loc7"/><target ref="loc8"/>
<label kind="assignment">Iin1 := 0</label>
</transition>
<transition>
<source ref="loc7"/><target ref="loc8"/>
<label kind="assignment">Iin1 := 1</label>
</transition>
<transition>
<source ref="loc8"/><target ref="loc9"/>
<label kind="assignment">Iin2 := 0</label>
</transition>
<transition>
<source ref="loc8"/><target ref="loc9"/>
<label kind="assignment">Iin2 := 1</label>
</transition>
<transition>
<source ref="loc9"/><target ref="loc10"/>
<label kind="assignment">Iin3 := 0</label>
</transition>
<transition>
<source ref="loc9"/><target ref="loc10"/>
<label kind="assignment">Iin3 := 1</label>
</transition>
<transition>
<source ref="loc10"/><target ref="loc11"/>
<label kind="assignment">Icontrollable_c0 := 0</label>
</transition>
<transition>
<source ref="loc10"/><target ref="loc11"/>
<label kind="assignment">Icontrollable_c0 := 1</label>
</transition>
<transition>
<source ref="loc11"/><target ref="loc12"/>
<label kind="assignment">Icontrollable_c1 := 0</label>
</transition>
<transition>
<source ref="loc11"/><target ref="loc12"/>
<label kind="assignment">Icontrollable_c1 := 1</label>
</transition>
<transition>
<source ref="loc12"/><target ref="loc13"/>
<label kind="assignment">Icontrollable_c2 := 0</label>
</transition>
<transition>
<source ref="loc12"/><target ref="loc13"/>
<label kind="assignment">Icontrollable_c2 := 1</label>
</transition>
<transition>
<source ref="loc13"/><target ref="loc14"/>
<label kind="assignment">Icontrollable_c3 := 0</label>
</transition>
<transition>
<source ref="loc13"/><target ref="loc14"/>
<label kind="assignment">Icontrollable_c3 := 1</label>
</transition>
<transition>
<source ref="loc14"/><target ref="loc15"/>
<label kind="assignment">Icontrollable_s := 0</label>
</transition>
<transition>
<source ref="loc14"/><target ref="loc15"/>
<label kind="assignment">Icontrollable_s := 1</label>
</transition>
<transition>
<source ref="loc15"/><target ref="loc16"/>
<label kind="assignment">Lbenchn21 := 1</label>
</transition>
<transition>
<source ref="loc16"/><target ref="loc17"/>
<label kind="assignment">Lbenchbad_out := !(!((Lbenchbad_out) &amp;&amp; (Lbenchn21)) &amp;&amp; !(Icontrollable_s))</label>
</transition>
<transition>
<source ref="loc17"/><target ref="loc18"/>
<label kind="assignment">Lbenchstate0_out := (!(((!(!((!(!(!(Icontrollable_c1) &amp;&amp; !(Icontrollable_c0)) &amp;&amp; (Icontrollable_c3)) &amp;&amp; !(Iin1)) &amp;&amp; !(Iin2)) &amp;&amp; !(!(!((!(Iin2) &amp;&amp; !(Icontrollable_c1)) &amp;&amp; ((Iin1) &amp;&amp; (Icontrollable_c0))) &amp;&amp; !((!(!(!(Iin1) &amp;&amp; !(Icontrollable_c0)) &amp;&amp; !((Iin1) &amp;&amp; (Icontrollable_c0))) &amp;&amp; (Icontrollable_c1)) &amp;&amp; (Iin2))) &amp;&amp; (Icontrollable_c3))) &amp;&amp; !(Iin0)) &amp;&amp; (!((!(!((!((!(((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin2) &amp;&amp; (Icontrollable_c0))) &amp;&amp; !(!((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; !((Iin2) &amp;&amp; (Icontrollable_c0)))) &amp;&amp; (((Iin0) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin1) &amp;&amp; (Icontrollable_c0)))) &amp;&amp; !(!(!(((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin2) &amp;&amp; (Icontrollable_c0))) &amp;&amp; !(!((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; !((Iin2) &amp;&amp; (Icontrollable_c0)))) &amp;&amp; !(((Iin0) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin1) &amp;&amp; (Icontrollable_c0))))) &amp;&amp; !(Icontrollable_c3)) &amp;&amp; (!(!(Iin0) &amp;&amp; !(Icontrollable_c3)) &amp;&amp; (Icontrollable_c2))) &amp;&amp; !(((!((!(((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin2) &amp;&amp; (Icontrollable_c0))) &amp;&amp; !(!((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; !((Iin2) &amp;&amp; (Icontrollable_c0)))) &amp;&amp; (((Iin0) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin1) &amp;&amp; (Icontrollable_c0)))) &amp;&amp; !(!(!(((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin2) &amp;&amp; (Icontrollable_c0))) &amp;&amp; !(!((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; !((Iin2) &amp;&amp; (Icontrollable_c0)))) &amp;&amp; !(((Iin0) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin1) &amp;&amp; (Icontrollable_c0))))) &amp;&amp; !(Icontrollable_c3)) &amp;&amp; !(!(!(Iin0) &amp;&amp; !(Icontrollable_c3)) &amp;&amp; (Icontrollable_c2)))) &amp;&amp; (Iin3)) &amp;&amp; !(!(!(!((!((!(((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin2) &amp;&amp; (Icontrollable_c0))) &amp;&amp; !(!((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; !((Iin2) &amp;&amp; (Icontrollable_c0)))) &amp;&amp; (((Iin0) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin1) &amp;&amp; (Icontrollable_c0)))) &amp;&amp; !(!(!(((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin2) &amp;&amp; (Icontrollable_c0))) &amp;&amp; !(!((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; !((Iin2) &amp;&amp; (Icontrollable_c0)))) &amp;&amp; !(((Iin0) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin1) &amp;&amp; (Icontrollable_c0))))) &amp;&amp; !(Icontrollable_c3)) &amp;&amp; (!(!(Iin0) &amp;&amp; !(Icontrollable_c3)) &amp;&amp; (Icontrollable_c2))) &amp;&amp; !(((!((!(((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin2) &amp;&amp; (Icontrollable_c0))) &amp;&amp; !(!((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; !((Iin2) &amp;&amp; (Icontrollable_c0)))) &amp;&amp; (((Iin0) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin1) &amp;&amp; (Icontrollable_c0)))) &amp;&amp; !(!(!(((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin2) &amp;&amp; (Icontrollable_c0))) &amp;&amp; !(!((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; !((Iin2) &amp;&amp; (Icontrollable_c0)))) &amp;&amp; !(((Iin0) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin1) &amp;&amp; (Icontrollable_c0))))) &amp;&amp; !(Icontrollable_c3)) &amp;&amp; !(!(!(Iin0) &amp;&amp; !(Icontrollable_c3)) &amp;&amp; (Icontrollable_c2)))) &amp;&amp; !(Iin3)))) &amp;&amp; !((Lbenchstate0_out) &amp;&amp; (Lbenchn21))) &amp;&amp; !(!((!(!((!(!(!(Icontrollable_c1) &amp;&amp; !(Icontrollable_c0)) &amp;&amp; (Icontrollable_c3)) &amp;&amp; !(Iin1)) &amp;&amp; !(Iin2)) &amp;&amp; !(!(!((!(Iin2) &amp;&amp; !(Icontrollable_c1)) &amp;&amp; ((Iin1) &amp;&amp; (Icontrollable_c0))) &amp;&amp; !((!(!(!(Iin1) &amp;&amp; !(Icontrollable_c0)) &amp;&amp; !((Iin1) &amp;&amp; (Icontrollable_c0))) &amp;&amp; (Icontrollable_c1)) &amp;&amp; (Iin2))) &amp;&amp; (Icontrollable_c3))) &amp;&amp; !(Iin0)) &amp;&amp; (!((!(!((!((!(((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin2) &amp;&amp; (Icontrollable_c0))) &amp;&amp; !(!((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; !((Iin2) &amp;&amp; (Icontrollable_c0)))) &amp;&amp; (((Iin0) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin1) &amp;&amp; (Icontrollable_c0)))) &amp;&amp; !(!(!(((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin2) &amp;&amp; (Icontrollable_c0))) &amp;&amp; !(!((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; !((Iin2) &amp;&amp; (Icontrollable_c0)))) &amp;&amp; !(((Iin0) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin1) &amp;&amp; (Icontrollable_c0))))) &amp;&amp; !(Icontrollable_c3)) &amp;&amp; (!(!(Iin0) &amp;&amp; !(Icontrollable_c3)) &amp;&amp; (Icontrollable_c2))) &amp;&amp; !(((!((!(((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin2) &amp;&amp; (Icontrollable_c0))) &amp;&amp; !(!((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; !((Iin2) &amp;&amp; (Icontrollable_c0)))) &amp;&amp; (((Iin0) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin1) &amp;&amp; (Icontrollable_c0)))) &amp;&amp; !(!(!(((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin2) &amp;&amp; (Icontrollable_c0))) &amp;&amp; !(!((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; !((Iin2) &amp;&amp; (Icontrollable_c0)))) &amp;&amp; !(((Iin0) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin1) &amp;&amp; (Icontrollable_c0))))) &amp;&amp; !(Icontrollable_c3)) &amp;&amp; !(!(!(Iin0) &amp;&amp; !(Icontrollable_c3)) &amp;&amp; (Icontrollable_c2)))) &amp;&amp; (Iin3)) &amp;&amp; !(!(!(!((!((!(((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin2) &amp;&amp; (Icontrollable_c0))) &amp;&amp; !(!((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; !((Iin2) &amp;&amp; (Icontrollable_c0)))) &amp;&amp; (((Iin0) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin1) &amp;&amp; (Icontrollable_c0)))) &amp;&amp; !(!(!(((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin2) &amp;&amp; (Icontrollable_c0))) &amp;&amp; !(!((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; !((Iin2) &amp;&amp; (Icontrollable_c0)))) &amp;&amp; !(((Iin0) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin1) &amp;&amp; (Icontrollable_c0))))) &amp;&amp; !(Icontrollable_c3)) &amp;&amp; (!(!(Iin0) &amp;&amp; !(Icontrollable_c3)) &amp;&amp; (Icontrollable_c2))) &amp;&amp; !(((!((!(((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin2) &amp;&amp; (Icontrollable_c0))) &amp;&amp; !(!((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; !((Iin2) &amp;&amp; (Icontrollable_c0)))) &amp;&amp; (((Iin0) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin1) &amp;&amp; (Icontrollable_c0)))) &amp;&amp; !(!(!(((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin2) &amp;&amp; (Icontrollable_c0))) &amp;&amp; !(!((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; !((Iin2) &amp;&amp; (Icontrollable_c0)))) &amp;&amp; !(((Iin0) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin1) &amp;&amp; (Icontrollable_c0))))) &amp;&amp; !(Icontrollable_c3)) &amp;&amp; !(!(!(Iin0) &amp;&amp; !(Icontrollable_c3)) &amp;&amp; (Icontrollable_c2)))) &amp;&amp; !(Iin3)))) &amp;&amp; ((Lbenchstate0_out) &amp;&amp; (Lbenchn21))))</label>
</transition>
<transition>
<source ref="loc18"/><target ref="loc19"/>
<label kind="assignment">Lbenchstate1_out := (!(!(!((!(!((!(!(!(Icontrollable_c1) &amp;&amp; !(Icontrollable_c0)) &amp;&amp; (Icontrollable_c3)) &amp;&amp; !(Iin1)) &amp;&amp; !(Iin2)) &amp;&amp; !(!(!((!(Iin2) &amp;&amp; !(Icontrollable_c1)) &amp;&amp; ((Iin1) &amp;&amp; (Icontrollable_c0))) &amp;&amp; !((!(!(!(Iin1) &amp;&amp; !(Icontrollable_c0)) &amp;&amp; !((Iin1) &amp;&amp; (Icontrollable_c0))) &amp;&amp; (Icontrollable_c1)) &amp;&amp; (Iin2))) &amp;&amp; (Icontrollable_c3))) &amp;&amp; !(Iin0)) &amp;&amp; (!((!(!((!((!(((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin2) &amp;&amp; (Icontrollable_c0))) &amp;&amp; !(!((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; !((Iin2) &amp;&amp; (Icontrollable_c0)))) &amp;&amp; (((Iin0) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin1) &amp;&amp; (Icontrollable_c0)))) &amp;&amp; !(!(!(((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin2) &amp;&amp; (Icontrollable_c0))) &amp;&amp; !(!((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; !((Iin2) &amp;&amp; (Icontrollable_c0)))) &amp;&amp; !(((Iin0) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin1) &amp;&amp; (Icontrollable_c0))))) &amp;&amp; !(Icontrollable_c3)) &amp;&amp; (!(!(Iin0) &amp;&amp; !(Icontrollable_c3)) &amp;&amp; (Icontrollable_c2))) &amp;&amp; !(((!((!(((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin2) &amp;&amp; (Icontrollable_c0))) &amp;&amp; !(!((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; !((Iin2) &amp;&amp; (Icontrollable_c0)))) &amp;&amp; (((Iin0) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin1) &amp;&amp; (Icontrollable_c0)))) &amp;&amp; !(!(!(((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin2) &amp;&amp; (Icontrollable_c0))) &amp;&amp; !(!((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; !((Iin2) &amp;&amp; (Icontrollable_c0)))) &amp;&amp; !(((Iin0) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin1) &amp;&amp; (Icontrollable_c0))))) &amp;&amp; !(Icontrollable_c3)) &amp;&amp; !(!(!(Iin0) &amp;&amp; !(Icontrollable_c3)) &amp;&amp; (Icontrollable_c2)))) &amp;&amp; (Iin3)) &amp;&amp; !(!(!(!((!((!(((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin2) &amp;&amp; (Icontrollable_c0))) &amp;&amp; !(!((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; !((Iin2) &amp;&amp; (Icontrollable_c0)))) &amp;&amp; (((Iin0) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin1) &amp;&amp; (Icontrollable_c0)))) &amp;&amp; !(!(!(((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin2) &amp;&amp; (Icontrollable_c0))) &amp;&amp; !(!((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; !((Iin2) &amp;&amp; (Icontrollable_c0)))) &amp;&amp; !(((Iin0) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin1) &amp;&amp; (Icontrollable_c0))))) &amp;&amp; !(Icontrollable_c3)) &amp;&amp; (!(!(Iin0) &amp;&amp; !(Icontrollable_c3)) &amp;&amp; (Icontrollable_c2))) &amp;&amp; !(((!((!(((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin2) &amp;&amp; (Icontrollable_c0))) &amp;&amp; !(!((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; !((Iin2) &amp;&amp; (Icontrollable_c0)))) &amp;&amp; (((Iin0) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin1) &amp;&amp; (Icontrollable_c0)))) &amp;&amp; !(!(!(((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin2) &amp;&amp; (Icontrollable_c0))) &amp;&amp; !(!((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; !((Iin2) &amp;&amp; (Icontrollable_c0)))) &amp;&amp; !(((Iin0) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin1) &amp;&amp; (Icontrollable_c0))))) &amp;&amp; !(Icontrollable_c3)) &amp;&amp; !(!(!(Iin0) &amp;&amp; !(Icontrollable_c3)) &amp;&amp; (Icontrollable_c2)))) &amp;&amp; !(Iin3)))) &amp;&amp; ((Lbenchstate0_out) &amp;&amp; (Lbenchn21))) &amp;&amp; !((Lbenchstate1_out) &amp;&amp; (Lbenchn21))) &amp;&amp; !((!((!(!((!(!(!(Icontrollable_c1) &amp;&amp; !(Icontrollable_c0)) &amp;&amp; (Icontrollable_c3)) &amp;&amp; !(Iin1)) &amp;&amp; !(Iin2)) &amp;&amp; !(!(!((!(Iin2) &amp;&amp; !(Icontrollable_c1)) &amp;&amp; ((Iin1) &amp;&amp; (Icontrollable_c0))) &amp;&amp; !((!(!(!(Iin1) &amp;&amp; !(Icontrollable_c0)) &amp;&amp; !((Iin1) &amp;&amp; (Icontrollable_c0))) &amp;&amp; (Icontrollable_c1)) &amp;&amp; (Iin2))) &amp;&amp; (Icontrollable_c3))) &amp;&amp; !(Iin0)) &amp;&amp; (!((!(!((!((!(((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin2) &amp;&amp; (Icontrollable_c0))) &amp;&amp; !(!((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; !((Iin2) &amp;&amp; (Icontrollable_c0)))) &amp;&amp; (((Iin0) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin1) &amp;&amp; (Icontrollable_c0)))) &amp;&amp; !(!(!(((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin2) &amp;&amp; (Icontrollable_c0))) &amp;&amp; !(!((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; !((Iin2) &amp;&amp; (Icontrollable_c0)))) &amp;&amp; !(((Iin0) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin1) &amp;&amp; (Icontrollable_c0))))) &amp;&amp; !(Icontrollable_c3)) &amp;&amp; (!(!(Iin0) &amp;&amp; !(Icontrollable_c3)) &amp;&amp; (Icontrollable_c2))) &amp;&amp; !(((!((!(((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin2) &amp;&amp; (Icontrollable_c0))) &amp;&amp; !(!((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; !((Iin2) &amp;&amp; (Icontrollable_c0)))) &amp;&amp; (((Iin0) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin1) &amp;&amp; (Icontrollable_c0)))) &amp;&amp; !(!(!(((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin2) &amp;&amp; (Icontrollable_c0))) &amp;&amp; !(!((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; !((Iin2) &amp;&amp; (Icontrollable_c0)))) &amp;&amp; !(((Iin0) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin1) &amp;&amp; (Icontrollable_c0))))) &amp;&amp; !(Icontrollable_c3)) &amp;&amp; !(!(!(Iin0) &amp;&amp; !(Icontrollable_c3)) &amp;&amp; (Icontrollable_c2)))) &amp;&amp; (Iin3)) &amp;&amp; !(!(!(!((!((!(((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin2) &amp;&amp; (Icontrollable_c0))) &amp;&amp; !(!((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; !((Iin2) &amp;&amp; (Icontrollable_c0)))) &amp;&amp; (((Iin0) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin1) &amp;&amp; (Icontrollable_c0)))) &amp;&amp; !(!(!(((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin2) &amp;&amp; (Icontrollable_c0))) &amp;&amp; !(!((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; !((Iin2) &amp;&amp; (Icontrollable_c0)))) &amp;&amp; !(((Iin0) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin1) &amp;&amp; (Icontrollable_c0))))) &amp;&amp; !(Icontrollable_c3)) &amp;&amp; (!(!(Iin0) &amp;&amp; !(Icontrollable_c3)) &amp;&amp; (Icontrollable_c2))) &amp;&amp; !(((!((!(((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin2) &amp;&amp; (Icontrollable_c0))) &amp;&amp; !(!((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; !((Iin2) &amp;&amp; (Icontrollable_c0)))) &amp;&amp; (((Iin0) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin1) &amp;&amp; (Icontrollable_c0)))) &amp;&amp; !(!(!(((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin2) &amp;&amp; (Icontrollable_c0))) &amp;&amp; !(!((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; !((Iin2) &amp;&amp; (Icontrollable_c0)))) &amp;&amp; !(((Iin0) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin1) &amp;&amp; (Icontrollable_c0))))) &amp;&amp; !(Icontrollable_c3)) &amp;&amp; !(!(!(Iin0) &amp;&amp; !(Icontrollable_c3)) &amp;&amp; (Icontrollable_c2)))) &amp;&amp; !(Iin3)))) &amp;&amp; ((Lbenchstate0_out) &amp;&amp; (Lbenchn21))) &amp;&amp; ((Lbenchstate1_out) &amp;&amp; (Lbenchn21))))</label>
</transition>
<transition>
<source ref="loc19"/><target ref="loc20"/>
<label kind="assignment">Lbenchstate2_out := (!(!((!((!(!((!(!(!(Icontrollable_c1) &amp;&amp; !(Icontrollable_c0)) &amp;&amp; (Icontrollable_c3)) &amp;&amp; !(Iin1)) &amp;&amp; !(Iin2)) &amp;&amp; !(!(!((!(Iin2) &amp;&amp; !(Icontrollable_c1)) &amp;&amp; ((Iin1) &amp;&amp; (Icontrollable_c0))) &amp;&amp; !((!(!(!(Iin1) &amp;&amp; !(Icontrollable_c0)) &amp;&amp; !((Iin1) &amp;&amp; (Icontrollable_c0))) &amp;&amp; (Icontrollable_c1)) &amp;&amp; (Iin2))) &amp;&amp; (Icontrollable_c3))) &amp;&amp; !(Iin0)) &amp;&amp; (!((!(!((!((!(((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin2) &amp;&amp; (Icontrollable_c0))) &amp;&amp; !(!((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; !((Iin2) &amp;&amp; (Icontrollable_c0)))) &amp;&amp; (((Iin0) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin1) &amp;&amp; (Icontrollable_c0)))) &amp;&amp; !(!(!(((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin2) &amp;&amp; (Icontrollable_c0))) &amp;&amp; !(!((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; !((Iin2) &amp;&amp; (Icontrollable_c0)))) &amp;&amp; !(((Iin0) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin1) &amp;&amp; (Icontrollable_c0))))) &amp;&amp; !(Icontrollable_c3)) &amp;&amp; (!(!(Iin0) &amp;&amp; !(Icontrollable_c3)) &amp;&amp; (Icontrollable_c2))) &amp;&amp; !(((!((!(((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin2) &amp;&amp; (Icontrollable_c0))) &amp;&amp; !(!((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; !((Iin2) &amp;&amp; (Icontrollable_c0)))) &amp;&amp; (((Iin0) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin1) &amp;&amp; (Icontrollable_c0)))) &amp;&amp; !(!(!(((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin2) &amp;&amp; (Icontrollable_c0))) &amp;&amp; !(!((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; !((Iin2) &amp;&amp; (Icontrollable_c0)))) &amp;&amp; !(((Iin0) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin1) &amp;&amp; (Icontrollable_c0))))) &amp;&amp; !(Icontrollable_c3)) &amp;&amp; !(!(!(Iin0) &amp;&amp; !(Icontrollable_c3)) &amp;&amp; (Icontrollable_c2)))) &amp;&amp; (Iin3)) &amp;&amp; !(!(!(!((!((!(((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin2) &amp;&amp; (Icontrollable_c0))) &amp;&amp; !(!((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; !((Iin2) &amp;&amp; (Icontrollable_c0)))) &amp;&amp; (((Iin0) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin1) &amp;&amp; (Icontrollable_c0)))) &amp;&amp; !(!(!(((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin2) &amp;&amp; (Icontrollable_c0))) &amp;&amp; !(!((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; !((Iin2) &amp;&amp; (Icontrollable_c0)))) &amp;&amp; !(((Iin0) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin1) &amp;&amp; (Icontrollable_c0))))) &amp;&amp; !(Icontrollable_c3)) &amp;&amp; (!(!(Iin0) &amp;&amp; !(Icontrollable_c3)) &amp;&amp; (Icontrollable_c2))) &amp;&amp; !(((!((!(((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin2) &amp;&amp; (Icontrollable_c0))) &amp;&amp; !(!((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; !((Iin2) &amp;&amp; (Icontrollable_c0)))) &amp;&amp; (((Iin0) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin1) &amp;&amp; (Icontrollable_c0)))) &amp;&amp; !(!(!(((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin2) &amp;&amp; (Icontrollable_c0))) &amp;&amp; !(!((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; !((Iin2) &amp;&amp; (Icontrollable_c0)))) &amp;&amp; !(((Iin0) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin1) &amp;&amp; (Icontrollable_c0))))) &amp;&amp; !(Icontrollable_c3)) &amp;&amp; !(!(!(Iin0) &amp;&amp; !(Icontrollable_c3)) &amp;&amp; (Icontrollable_c2)))) &amp;&amp; !(Iin3)))) &amp;&amp; ((Lbenchstate0_out) &amp;&amp; (Lbenchn21))) &amp;&amp; ((Lbenchstate1_out) &amp;&amp; (Lbenchn21))) &amp;&amp; !((Lbenchstate2_out) &amp;&amp; (Lbenchn21))) &amp;&amp; !(((!((!(!((!(!(!(Icontrollable_c1) &amp;&amp; !(Icontrollable_c0)) &amp;&amp; (Icontrollable_c3)) &amp;&amp; !(Iin1)) &amp;&amp; !(Iin2)) &amp;&amp; !(!(!((!(Iin2) &amp;&amp; !(Icontrollable_c1)) &amp;&amp; ((Iin1) &amp;&amp; (Icontrollable_c0))) &amp;&amp; !((!(!(!(Iin1) &amp;&amp; !(Icontrollable_c0)) &amp;&amp; !((Iin1) &amp;&amp; (Icontrollable_c0))) &amp;&amp; (Icontrollable_c1)) &amp;&amp; (Iin2))) &amp;&amp; (Icontrollable_c3))) &amp;&amp; !(Iin0)) &amp;&amp; (!((!(!((!((!(((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin2) &amp;&amp; (Icontrollable_c0))) &amp;&amp; !(!((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; !((Iin2) &amp;&amp; (Icontrollable_c0)))) &amp;&amp; (((Iin0) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin1) &amp;&amp; (Icontrollable_c0)))) &amp;&amp; !(!(!(((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin2) &amp;&amp; (Icontrollable_c0))) &amp;&amp; !(!((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; !((Iin2) &amp;&amp; (Icontrollable_c0)))) &amp;&amp; !(((Iin0) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin1) &amp;&amp; (Icontrollable_c0))))) &amp;&amp; !(Icontrollable_c3)) &amp;&amp; (!(!(Iin0) &amp;&amp; !(Icontrollable_c3)) &amp;&amp; (Icontrollable_c2))) &amp;&amp; !(((!((!(((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin2) &amp;&amp; (Icontrollable_c0))) &amp;&amp; !(!((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; !((Iin2) &amp;&amp; (Icontrollable_c0)))) &amp;&amp; (((Iin0) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin1) &amp;&amp; (Icontrollable_c0)))) &amp;&amp; !(!(!(((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin2) &amp;&amp; (Icontrollable_c0))) &amp;&amp; !(!((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; !((Iin2) &amp;&amp; (Icontrollable_c0)))) &amp;&amp; !(((Iin0) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin1) &amp;&amp; (Icontrollable_c0))))) &amp;&amp; !(Icontrollable_c3)) &amp;&amp; !(!(!(Iin0) &amp;&amp; !(Icontrollable_c3)) &amp;&amp; (Icontrollable_c2)))) &amp;&amp; (Iin3)) &amp;&amp; !(!(!(!((!((!(((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin2) &amp;&amp; (Icontrollable_c0))) &amp;&amp; !(!((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; !((Iin2) &amp;&amp; (Icontrollable_c0)))) &amp;&amp; (((Iin0) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin1) &amp;&amp; (Icontrollable_c0)))) &amp;&amp; !(!(!(((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin2) &amp;&amp; (Icontrollable_c0))) &amp;&amp; !(!((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; !((Iin2) &amp;&amp; (Icontrollable_c0)))) &amp;&amp; !(((Iin0) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin1) &amp;&amp; (Icontrollable_c0))))) &amp;&amp; !(Icontrollable_c3)) &amp;&amp; (!(!(Iin0) &amp;&amp; !(Icontrollable_c3)) &amp;&amp; (Icontrollable_c2))) &amp;&amp; !(((!((!(((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin2) &amp;&amp; (Icontrollable_c0))) &amp;&amp; !(!((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; !((Iin2) &amp;&amp; (Icontrollable_c0)))) &amp;&amp; (((Iin0) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin1) &amp;&amp; (Icontrollable_c0)))) &amp;&amp; !(!(!(((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin2) &amp;&amp; (Icontrollable_c0))) &amp;&amp; !(!((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; !((Iin2) &amp;&amp; (Icontrollable_c0)))) &amp;&amp; !(((Iin0) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin1) &amp;&amp; (Icontrollable_c0))))) &amp;&amp; !(Icontrollable_c3)) &amp;&amp; !(!(!(Iin0) &amp;&amp; !(Icontrollable_c3)) &amp;&amp; (Icontrollable_c2)))) &amp;&amp; !(Iin3)))) &amp;&amp; ((Lbenchstate0_out) &amp;&amp; (Lbenchn21))) &amp;&amp; ((Lbenchstate1_out) &amp;&amp; (Lbenchn21))) &amp;&amp; ((Lbenchstate2_out) &amp;&amp; (Lbenchn21))))</label>
</transition>
<transition>
<source ref="loc20"/><target ref="loc21"/>
<label kind="assignment">Lbenchstate3_out := !(!(!(((!((!(!((!(!(!(Icontrollable_c1) &amp;&amp; !(Icontrollable_c0)) &amp;&amp; (Icontrollable_c3)) &amp;&amp; !(Iin1)) &amp;&amp; !(Iin2)) &amp;&amp; !(!(!((!(Iin2) &amp;&amp; !(Icontrollable_c1)) &amp;&amp; ((Iin1) &amp;&amp; (Icontrollable_c0))) &amp;&amp; !((!(!(!(Iin1) &amp;&amp; !(Icontrollable_c0)) &amp;&amp; !((Iin1) &amp;&amp; (Icontrollable_c0))) &amp;&amp; (Icontrollable_c1)) &amp;&amp; (Iin2))) &amp;&amp; (Icontrollable_c3))) &amp;&amp; !(Iin0)) &amp;&amp; (!((!(!((!((!(((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin2) &amp;&amp; (Icontrollable_c0))) &amp;&amp; !(!((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; !((Iin2) &amp;&amp; (Icontrollable_c0)))) &amp;&amp; (((Iin0) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin1) &amp;&amp; (Icontrollable_c0)))) &amp;&amp; !(!(!(((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin2) &amp;&amp; (Icontrollable_c0))) &amp;&amp; !(!((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; !((Iin2) &amp;&amp; (Icontrollable_c0)))) &amp;&amp; !(((Iin0) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin1) &amp;&amp; (Icontrollable_c0))))) &amp;&amp; !(Icontrollable_c3)) &amp;&amp; (!(!(Iin0) &amp;&amp; !(Icontrollable_c3)) &amp;&amp; (Icontrollable_c2))) &amp;&amp; !(((!((!(((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin2) &amp;&amp; (Icontrollable_c0))) &amp;&amp; !(!((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; !((Iin2) &amp;&amp; (Icontrollable_c0)))) &amp;&amp; (((Iin0) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin1) &amp;&amp; (Icontrollable_c0)))) &amp;&amp; !(!(!(((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin2) &amp;&amp; (Icontrollable_c0))) &amp;&amp; !(!((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; !((Iin2) &amp;&amp; (Icontrollable_c0)))) &amp;&amp; !(((Iin0) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin1) &amp;&amp; (Icontrollable_c0))))) &amp;&amp; !(Icontrollable_c3)) &amp;&amp; !(!(!(Iin0) &amp;&amp; !(Icontrollable_c3)) &amp;&amp; (Icontrollable_c2)))) &amp;&amp; (Iin3)) &amp;&amp; !(!(!(!((!((!(((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin2) &amp;&amp; (Icontrollable_c0))) &amp;&amp; !(!((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; !((Iin2) &amp;&amp; (Icontrollable_c0)))) &amp;&amp; (((Iin0) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin1) &amp;&amp; (Icontrollable_c0)))) &amp;&amp; !(!(!(((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin2) &amp;&amp; (Icontrollable_c0))) &amp;&amp; !(!((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; !((Iin2) &amp;&amp; (Icontrollable_c0)))) &amp;&amp; !(((Iin0) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin1) &amp;&amp; (Icontrollable_c0))))) &amp;&amp; !(Icontrollable_c3)) &amp;&amp; (!(!(Iin0) &amp;&amp; !(Icontrollable_c3)) &amp;&amp; (Icontrollable_c2))) &amp;&amp; !(((!((!(((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin2) &amp;&amp; (Icontrollable_c0))) &amp;&amp; !(!((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; !((Iin2) &amp;&amp; (Icontrollable_c0)))) &amp;&amp; (((Iin0) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin1) &amp;&amp; (Icontrollable_c0)))) &amp;&amp; !(!(!(((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin2) &amp;&amp; (Icontrollable_c0))) &amp;&amp; !(!((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; !((Iin2) &amp;&amp; (Icontrollable_c0)))) &amp;&amp; !(((Iin0) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin1) &amp;&amp; (Icontrollable_c0))))) &amp;&amp; !(Icontrollable_c3)) &amp;&amp; !(!(!(Iin0) &amp;&amp; !(Icontrollable_c3)) &amp;&amp; (Icontrollable_c2)))) &amp;&amp; !(Iin3)))) &amp;&amp; ((Lbenchstate0_out) &amp;&amp; (Lbenchn21))) &amp;&amp; ((Lbenchstate1_out) &amp;&amp; (Lbenchn21))) &amp;&amp; ((Lbenchstate2_out) &amp;&amp; (Lbenchn21))) &amp;&amp; ((Lbenchstate3_out) &amp;&amp; (Lbenchn21))) &amp;&amp; !((((!((!(!((!(!(!(Icontrollable_c1) &amp;&amp; !(Icontrollable_c0)) &amp;&amp; (Icontrollable_c3)) &amp;&amp; !(Iin1)) &amp;&amp; !(Iin2)) &amp;&amp; !(!(!((!(Iin2) &amp;&amp; !(Icontrollable_c1)) &amp;&amp; ((Iin1) &amp;&amp; (Icontrollable_c0))) &amp;&amp; !((!(!(!(Iin1) &amp;&amp; !(Icontrollable_c0)) &amp;&amp; !((Iin1) &amp;&amp; (Icontrollable_c0))) &amp;&amp; (Icontrollable_c1)) &amp;&amp; (Iin2))) &amp;&amp; (Icontrollable_c3))) &amp;&amp; !(Iin0)) &amp;&amp; (!((!(!((!((!(((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin2) &amp;&amp; (Icontrollable_c0))) &amp;&amp; !(!((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; !((Iin2) &amp;&amp; (Icontrollable_c0)))) &amp;&amp; (((Iin0) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin1) &amp;&amp; (Icontrollable_c0)))) &amp;&amp; !(!(!(((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin2) &amp;&amp; (Icontrollable_c0))) &amp;&amp; !(!((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; !((Iin2) &amp;&amp; (Icontrollable_c0)))) &amp;&amp; !(((Iin0) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin1) &amp;&amp; (Icontrollable_c0))))) &amp;&amp; !(Icontrollable_c3)) &amp;&amp; (!(!(Iin0) &amp;&amp; !(Icontrollable_c3)) &amp;&amp; (Icontrollable_c2))) &amp;&amp; !(((!((!(((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin2) &amp;&amp; (Icontrollable_c0))) &amp;&amp; !(!((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; !((Iin2) &amp;&amp; (Icontrollable_c0)))) &amp;&amp; (((Iin0) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin1) &amp;&amp; (Icontrollable_c0)))) &amp;&amp; !(!(!(((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin2) &amp;&amp; (Icontrollable_c0))) &amp;&amp; !(!((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; !((Iin2) &amp;&amp; (Icontrollable_c0)))) &amp;&amp; !(((Iin0) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin1) &amp;&amp; (Icontrollable_c0))))) &amp;&amp; !(Icontrollable_c3)) &amp;&amp; !(!(!(Iin0) &amp;&amp; !(Icontrollable_c3)) &amp;&amp; (Icontrollable_c2)))) &amp;&amp; (Iin3)) &amp;&amp; !(!(!(!((!((!(((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin2) &amp;&amp; (Icontrollable_c0))) &amp;&amp; !(!((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; !((Iin2) &amp;&amp; (Icontrollable_c0)))) &amp;&amp; (((Iin0) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin1) &amp;&amp; (Icontrollable_c0)))) &amp;&amp; !(!(!(((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin2) &amp;&amp; (Icontrollable_c0))) &amp;&amp; !(!((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; !((Iin2) &amp;&amp; (Icontrollable_c0)))) &amp;&amp; !(((Iin0) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin1) &amp;&amp; (Icontrollable_c0))))) &amp;&amp; !(Icontrollable_c3)) &amp;&amp; (!(!(Iin0) &amp;&amp; !(Icontrollable_c3)) &amp;&amp; (Icontrollable_c2))) &amp;&amp; !(((!((!(((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin2) &amp;&amp; (Icontrollable_c0))) &amp;&amp; !(!((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; !((Iin2) &amp;&amp; (Icontrollable_c0)))) &amp;&amp; (((Iin0) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin1) &amp;&amp; (Icontrollable_c0)))) &amp;&amp; !(!(!(((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin2) &amp;&amp; (Icontrollable_c0))) &amp;&amp; !(!((Iin1) &amp;&amp; (Icontrollable_c1)) &amp;&amp; !((Iin2) &amp;&amp; (Icontrollable_c0)))) &amp;&amp; !(((Iin0) &amp;&amp; (Icontrollable_c1)) &amp;&amp; ((Iin1) &amp;&amp; (Icontrollable_c0))))) &amp;&amp; !(Icontrollable_c3)) &amp;&amp; !(!(!(Iin0) &amp;&amp; !(Icontrollable_c3)) &amp;&amp; (Icontrollable_c2)))) &amp;&amp; !(Iin3)))) &amp;&amp; ((Lbenchstate0_out) &amp;&amp; (Lbenchn21))) &amp;&amp; ((Lbenchstate1_out) &amp;&amp; (Lbenchn21))) &amp;&amp; ((Lbenchstate2_out) &amp;&amp; (Lbenchn21))) &amp;&amp; !((Lbenchstate3_out) &amp;&amp; (Lbenchn21))))</label>
</transition>
<transition>
<source ref="loc21"/><target ref="loc0"/>
<label kind="synchronisation">release0!</label>
<label kind="assignment">w0:=1</label>
<label kind="guard">running0 == 0</label>
</transition>
<transition>
<source ref="loc21"/><target ref="loc0"/>
<label kind="synchronisation">release1!</label>
<label kind="assignment">w0:=1</label>
<label kind="guard">running1 == 0</label>
</transition>
</template>
<template><name>Process1</name>
<declaration>bool Ia_0_;
bool Ia_1_;
bool Ib_0_;
bool Ib_1_;
bool Icontrollable_c_0_;
bool Icontrollable_c_1_;
bool Lstate_n15;
bool Lerr_out;
</declaration>
<location id="loc27"><name>on0</name>
<label kind="invariant">x1 &lt;= 1000</label>
</location>
<location id="loc28"><name>on1</name>
<label kind="invariant">x1 &lt;= 2000</label>
</location>
<location id="loc22"><name>w</name>
</location>
<location id="loc23"><name>dead</name>
</location>
<location id="loc25"><name>up</name>
<committed/>
</location>
<location id="loc29"><name>JustSetIa_0_</name>
<committed/>
</location>
<location id="loc30"><name>JustSetIa_1_</name>
<committed/>
</location>
<location id="loc31"><name>JustSetIb_0_</name>
<committed/>
</location>
<location id="loc32"><name>JustSetIb_1_</name>
<committed/>
</location>
<location id="loc33"><name>JustSetIcontrollable_c_0_</name>
<committed/>
</location>
<location id="loc34"><name>JustSetIcontrollable_c_1_</name>
<committed/>
</location>
<location id="loc35"><name>UpdatedLstate_n15</name>
<committed/>
</location>
<location id="loc36"><name>UpdatedLerr_out</name>
<committed/>
</location>
<init ref="loc22"/>
<transition>
<source ref="loc22"/><target ref="loc27"/>
<label kind="synchronisation">go1?</label>
<label kind="assignment">x1:=0, w1:=0</label>
<label kind="guard">Lstate_n15 == 0</label>
</transition>
<transition>
<source ref="loc22"/><target ref="loc23"/>
<label kind="guard">Lstate_n15 == 0 &amp;&amp; x1 &gt; 9000</label>
</transition>
<transition>
<source ref="loc27"/><target ref="loc25"/>
<label kind="assignment">x1:=0</label>
<label kind="guard">Lstate_n15 == 0 &amp;&amp; x1 &gt;= 1000 &amp;&amp; x1 &lt;= 1000</label>
</transition>
<transition>
<source ref="loc22"/><target ref="loc28"/>
<label kind="synchronisation">go1?</label>
<label kind="assignment">x1:=0, w1:=0</label>
<label kind="guard">Lstate_n15 == 1</label>
</transition>
<transition>
<source ref="loc22"/><target ref="loc23"/>
<label kind="guard">Lstate_n15 == 1 &amp;&amp; x1 &gt; 18000</label>
</transition>
<transition>
<source ref="loc28"/><target ref="loc25"/>
<label kind="assignment">x1:=0</label>
<label kind="guard">Lstate_n15 == 1 &amp;&amp; x1 &gt;= 2000 &amp;&amp; x1 &lt;= 2000</label>
</transition>
<transition>
<source ref="loc25"/><target ref="loc29"/>
<label kind="assignment">Ia_0_ := 0</label>
</transition>
<transition>
<source ref="loc25"/><target ref="loc29"/>
<label kind="assignment">Ia_0_ := 1</label>
</transition>
<transition>
<source ref="loc29"/><target ref="loc30"/>
<label kind="assignment">Ia_1_ := 0</label>
</transition>
<transition>
<source ref="loc29"/><target ref="loc30"/>
<label kind="assignment">Ia_1_ := 1</label>
</transition>
<transition>
<source ref="loc30"/><target ref="loc31"/>
<label kind="assignment">Ib_0_ := 0</label>
</transition>
<transition>
<source ref="loc30"/><target ref="loc31"/>
<label kind="assignment">Ib_0_ := 1</label>
</transition>
<transition>
<source ref="loc31"/><target ref="loc32"/>
<label kind="assignment">Ib_1_ := 0</label>
</transition>
<transition>
<source ref="loc31"/><target ref="loc32"/>
<label kind="assignment">Ib_1_ := 1</label>
</transition>
<transition>
<source ref="loc32"/><target ref="loc33"/>
<label kind="assignment">Icontrollable_c_0_ := 0</label>
</transition>
<transition>
<source ref="loc32"/><target ref="loc33"/>
<label kind="assignment">Icontrollable_c_0_ := 1</label>
</transition>
<transition>
<source ref="loc33"/><target ref="loc34"/>
<label kind="assignment">Icontrollable_c_1_ := 0</label>
</transition>
<transition>
<source ref="loc33"/><target ref="loc34"/>
<label kind="assignment">Icontrollable_c_1_ := 1</label>
</transition>
<transition>
<source ref="loc34"/><target ref="loc35"/>
<label kind="assignment">Lstate_n15 := 1</label>
</transition>
<transition>
<source ref="loc35"/><target ref="loc36"/>
<label kind="assignment">Lerr_out := !((!((!(!(!(!(Ib_1_) &amp;&amp; (Ia_1_)) &amp;&amp; !((Ib_1_) &amp;&amp; !(Ia_1_))) &amp;&amp; !((Ib_0_) &amp;&amp; (Ia_0_))) &amp;&amp; !((!(!(Ib_1_) &amp;&amp; (Ia_1_)) &amp;&amp; !((Ib_1_) &amp;&amp; !(Ia_1_))) &amp;&amp; ((Ib_0_) &amp;&amp; (Ia_0_)))) &amp;&amp; (Icontrollable_c_1_)) &amp;&amp; !(!(!(!(!(!(Ib_1_) &amp;&amp; (Ia_1_)) &amp;&amp; !((Ib_1_) &amp;&amp; !(Ia_1_))) &amp;&amp; !((Ib_0_) &amp;&amp; (Ia_0_))) &amp;&amp; !((!(!(Ib_1_) &amp;&amp; (Ia_1_)) &amp;&amp; !((Ib_1_) &amp;&amp; !(Ia_1_))) &amp;&amp; ((Ib_0_) &amp;&amp; (Ia_0_)))) &amp;&amp; !(Icontrollable_c_1_))) &amp;&amp; (!(!(!(!(Ib_0_) &amp;&amp; !(Ia_0_)) &amp;&amp; !((Ib_0_) &amp;&amp; (Ia_0_))) &amp;&amp; (Icontrollable_c_0_)) &amp;&amp; !((!(!(Ib_0_) &amp;&amp; !(Ia_0_)) &amp;&amp; !((Ib_0_) &amp;&amp; (Ia_0_))) &amp;&amp; !(Icontrollable_c_0_))))</label>
</transition>
<transition>
<source ref="loc36"/><target ref="loc22"/>
<label kind="synchronisation">release0!</label>
<label kind="assignment">w1:=1</label>
<label kind="guard">running0 == 1</label>
</transition>
<transition>
<source ref="loc36"/><target ref="loc22"/>
<label kind="synchronisation">release1!</label>
<label kind="assignment">w1:=1</label>
<label kind="guard">running1 == 1</label>
</transition>
</template>
<template><name>Process2</name>
<declaration>bool Ia_0_;
bool Ia_1_;
bool Ib_0_;
bool Ib_1_;
bool Icontrollable_c_0_;
bool Icontrollable_c_1_;
bool Lstate_n15;
bool Lerr_out;
</declaration>
<location id="loc42"><name>on0</name>
<label kind="invariant">x2 &lt;= 1000</label>
</location>
<location id="loc43"><name>on1</name>
<label kind="invariant">x2 &lt;= 2000</label>
</location>
<location id="loc37"><name>w</name>
</location>
<location id="loc38"><name>dead</name>
</location>
<location id="loc40"><name>up</name>
<committed/>
</location>
<location id="loc44"><name>JustSetIa_0_</name>
<committed/>
</location>
<location id="loc45"><name>JustSetIa_1_</name>
<committed/>
</location>
<location id="loc46"><name>JustSetIb_0_</name>
<committed/>
</location>
<location id="loc47"><name>JustSetIb_1_</name>
<committed/>
</location>
<location id="loc48"><name>JustSetIcontrollable_c_0_</name>
<committed/>
</location>
<location id="loc49"><name>JustSetIcontrollable_c_1_</name>
<committed/>
</location>
<location id="loc50"><name>UpdatedLstate_n15</name>
<committed/>
</location>
<location id="loc51"><name>UpdatedLerr_out</name>
<committed/>
</location>
<init ref="loc37"/>
<transition>
<source ref="loc37"/><target ref="loc42"/>
<label kind="synchronisation">go2?</label>
<label kind="assignment">x2:=0, w2:=0</label>
<label kind="guard">Lstate_n15 == 0</label>
</transition>
<transition>
<source ref="loc37"/><target ref="loc38"/>
<label kind="guard">Lstate_n15 == 0 &amp;&amp; x2 &gt; 9000</label>
</transition>
<transition>
<source ref="loc42"/><target ref="loc40"/>
<label kind="assignment">x2:=0</label>
<label kind="guard">Lstate_n15 == 0 &amp;&amp; x2 &gt;= 1000 &amp;&amp; x2 &lt;= 1000</label>
</transition>
<transition>
<source ref="loc37"/><target ref="loc43"/>
<label kind="synchronisation">go2?</label>
<label kind="assignment">x2:=0, w2:=0</label>
<label kind="guard">Lstate_n15 == 1</label>
</transition>
<transition>
<source ref="loc37"/><target ref="loc38"/>
<label kind="guard">Lstate_n15 == 1 &amp;&amp; x2 &gt; 18000</label>
</transition>
<transition>
<source ref="loc43"/><target ref="loc40"/>
<label kind="assignment">x2:=0</label>
<label kind="guard">Lstate_n15 == 1 &amp;&amp; x2 &gt;= 2000 &amp;&amp; x2 &lt;= 2000</label>
</transition>
<transition>
<source ref="loc40"/><target ref="loc44"/>
<label kind="assignment">Ia_0_ := 0</label>
</transition>
<transition>
<source ref="loc40"/><target ref="loc44"/>
<label kind="assignment">Ia_0_ := 1</label>
</transition>
<transition>
<source ref="loc44"/><target ref="loc45"/>
<label kind="assignment">Ia_1_ := 0</label>
</transition>
<transition>
<source ref="loc44"/><target ref="loc45"/>
<label kind="assignment">Ia_1_ := 1</label>
</transition>
<transition>
<source ref="loc45"/><target ref="loc46"/>
<label kind="assignment">Ib_0_ := 0</label>
</transition>
<transition>
<source ref="loc45"/><target ref="loc46"/>
<label kind="assignment">Ib_0_ := 1</label>
</transition>
<transition>
<source ref="loc46"/><target ref="loc47"/>
<label kind="assignment">Ib_1_ := 0</label>
</transition>
<transition>
<source ref="loc46"/><target ref="loc47"/>
<label kind="assignment">Ib_1_ := 1</label>
</transition>
<transition>
<source ref="loc47"/><target ref="loc48"/>
<label kind="assignment">Icontrollable_c_0_ := 0</label>
</transition>
<transition>
<source ref="loc47"/><target ref="loc48"/>
<label kind="assignment">Icontrollable_c_0_ := 1</label>
</transition>
<transition>
<source ref="loc48"/><target ref="loc49"/>
<label kind="assignment">Icontrollable_c_1_ := 0</label>
</transition>
<transition>
<source ref="loc48"/><target ref="loc49"/>
<label kind="assignment">Icontrollable_c_1_ := 1</label>
</transition>
<transition>
<source ref="loc49"/><target ref="loc50"/>
<label kind="assignment">Lstate_n15 := 1</label>
</transition>
<transition>
<source ref="loc50"/><target ref="loc51"/>
<label kind="assignment">Lerr_out := !((!((!(!(!(!(Ib_1_) &amp;&amp; (Ia_1_)) &amp;&amp; !((Ib_1_) &amp;&amp; !(Ia_1_))) &amp;&amp; !((Ib_0_) &amp;&amp; (Ia_0_))) &amp;&amp; !((!(!(Ib_1_) &amp;&amp; (Ia_1_)) &amp;&amp; !((Ib_1_) &amp;&amp; !(Ia_1_))) &amp;&amp; ((Ib_0_) &amp;&amp; (Ia_0_)))) &amp;&amp; (Icontrollable_c_1_)) &amp;&amp; !(!(!(!(!(!(Ib_1_) &amp;&amp; (Ia_1_)) &amp;&amp; !((Ib_1_) &amp;&amp; !(Ia_1_))) &amp;&amp; !((Ib_0_) &amp;&amp; (Ia_0_))) &amp;&amp; !((!(!(Ib_1_) &amp;&amp; (Ia_1_)) &amp;&amp; !((Ib_1_) &amp;&amp; !(Ia_1_))) &amp;&amp; ((Ib_0_) &amp;&amp; (Ia_0_)))) &amp;&amp; !(Icontrollable_c_1_))) &amp;&amp; (!(!(!(!(Ib_0_) &amp;&amp; !(Ia_0_)) &amp;&amp; !((Ib_0_) &amp;&amp; (Ia_0_))) &amp;&amp; (Icontrollable_c_0_)) &amp;&amp; !((!(!(Ib_0_) &amp;&amp; !(Ia_0_)) &amp;&amp; !((Ib_0_) &amp;&amp; (Ia_0_))) &amp;&amp; !(Icontrollable_c_0_))))</label>
</transition>
<transition>
<source ref="loc51"/><target ref="loc37"/>
<label kind="synchronisation">release0!</label>
<label kind="assignment">w2:=1</label>
<label kind="guard">running0 == 2</label>
</transition>
<transition>
<source ref="loc51"/><target ref="loc37"/>
<label kind="synchronisation">release1!</label>
<label kind="assignment">w2:=1</label>
<label kind="guard">running1 == 2</label>
</transition>
</template>
<template><name>Machine0</name>
<location id="loc53"><name>busy</name>
</location>
<location id="loc52"><name>idle</name>
<committed/>
</location>
<init ref="loc52"/>
<transition>
<source ref="loc53"/><target ref="loc52"/>
<label kind="synchronisation">release0?</label>
<label kind="assignment">running0 := 2</label>
</transition>
<transition>
<source ref="loc52"/><target ref="loc53"/>
<label kind="synchronisation">go0!</label>
<label kind="assignment">round = 1,  running0 := 0</label>
<label kind="guard">round == 0 &amp;&amp; w0 == 1</label>
</transition>
<transition>
<source ref="loc52"/><target ref="loc52"/>
<label kind="assignment">round = 1</label>
<label kind="guard">round == 0 &amp;&amp; w0 == 0</label>
</transition>
<transition>
<source ref="loc52"/><target ref="loc53"/>
<label kind="synchronisation">go1!</label>
<label kind="assignment">round = 2,  running0 := 1</label>
<label kind="guard">round == 1 &amp;&amp; w1 == 1</label>
</transition>
<transition>
<source ref="loc52"/><target ref="loc52"/>
<label kind="assignment">round = 2</label>
<label kind="guard">round == 1 &amp;&amp; w1 == 0</label>
</transition>
<transition>
<source ref="loc52"/><target ref="loc53"/>
<label kind="synchronisation">go2!</label>
<label kind="assignment">round = 0,  running0 := 2</label>
<label kind="guard">round == 2 &amp;&amp; w2 == 1</label>
</transition>
<transition>
<source ref="loc52"/><target ref="loc52"/>
<label kind="assignment">round = 0</label>
<label kind="guard">round == 2 &amp;&amp; w2 == 0</label>
</transition>
</template>
<template><name>Machine1</name>
<location id="loc55"><name>busy</name>
</location>
<location id="loc54"><name>idle</name>
<committed/>
</location>
<init ref="loc54"/>
<transition>
<source ref="loc55"/><target ref="loc54"/>
<label kind="synchronisation">release1?</label>
<label kind="assignment">running1 := 2</label>
</transition>
<transition>
<source ref="loc54"/><target ref="loc55"/>
<label kind="synchronisation">go0!</label>
<label kind="assignment">round = 1,  running1 := 0</label>
<label kind="guard">round == 0 &amp;&amp; w0 == 1</label>
</transition>
<transition>
<source ref="loc54"/><target ref="loc54"/>
<label kind="assignment">round = 1</label>
<label kind="guard">round == 0 &amp;&amp; w0 == 0</label>
</transition>
<transition>
<source ref="loc54"/><target ref="loc55"/>
<label kind="synchronisation">go1!</label>
<label kind="assignment">round = 2,  running1 := 1</label>
<label kind="guard">round == 1 &amp;&amp; w1 == 1</label>
</transition>
<transition>
<source ref="loc54"/><target ref="loc54"/>
<label kind="assignment">round = 2</label>
<label kind="guard">round == 1 &amp;&amp; w1 == 0</label>
</transition>
<transition>
<source ref="loc54"/><target ref="loc55"/>
<label kind="synchronisation">go2!</label>
<label kind="assignment">round = 0,  running1 := 2</label>
<label kind="guard">round == 2 &amp;&amp; w2 == 1</label>
</transition>
<transition>
<source ref="loc54"/><target ref="loc54"/>
<label kind="assignment">round = 0</label>
<label kind="guard">round == 2 &amp;&amp; w2 == 0</label>
</transition>
</template>
<instantiation></instantiation>
<system>system Process0, Process1, Process2, Machine0, Machine1;</system>
</nta>
