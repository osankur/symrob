<TA><Declaration> var err : {0..1} = 0;
var out0 : {0..2} = 2;
var b0_0 : {0..2} = 2;
var b0_1 : {0..2} = 2;
var out1 : {0..2} = 2;
var b1_0 : {0..2} = 2;
var b1_1 : {0..2} = 2;
var b1_2 : {0..2} = 2;
var b1_3 : {0..2} = 2;
var b1_4 : {0..2} = 2;
var b1_5 : {0..2} = 2;
var b1_6 : {0..2} = 2;
var b1_7 : {0..2} = 2;
var b1_8 : {0..2} = 2;
var b1_9 : {0..2} = 2;
var b1_10 : {0..2} = 2;
var b1_11 : {0..2} = 2;
var b1_12 : {0..2} = 2;
var b1_13 : {0..2} = 2;
var b1_14 : {0..2} = 2;
var b1_15 : {0..2} = 2;
var b1_16 : {0..2} = 2;
var b1_17 : {0..2} = 2;
var b1_18 : {0..2} = 2;
var b1_19 : {0..2} = 2;
var b1_20 : {0..2} = 2;
var b1_21 : {0..2} = 2;
var b1_22 : {0..2} = 2;
var b1_23 : {0..2} = 2;
var b1_24 : {0..2} = 2;
var b1_25 : {0..2} = 2;
var b1_26 : {0..2} = 2;
var b1_27 : {0..2} = 2;
var b1_28 : {0..2} = 2;
var b1_29 : {0..2} = 2;
var b1_30 : {0..2} = 2;
var b1_31 : {0..2} = 2;
var b1_32 : {0..2} = 2;
var b1_33 : {0..2} = 2;
var b1_34 : {0..2} = 2;
var out2 : {0..2} = 2;
var b2_0 : {0..2} = 2;
var b2_1 : {0..2} = 2;
var b2_2 : {0..2} = 2;
var b2_3 : {0..2} = 2;
var b2_4 : {0..2} = 2;
var b2_5 : {0..2} = 2;
var b2_6 : {0..2} = 2;
var b2_7 : {0..2} = 2;
var b2_8 : {0..2} = 2;
var b2_9 : {0..2} = 2;
var b2_10 : {0..2} = 2;
var b2_11 : {0..2} = 2;
var b2_12 : {0..2} = 2;
var b2_13 : {0..2} = 2;
var b2_14 : {0..2} = 2;
var b2_15 : {0..2} = 2;
var b2_16 : {0..2} = 2;
var b2_17 : {0..2} = 2;
var b2_18 : {0..2} = 2;
var b2_19 : {0..2} = 2;
var b2_20 : {0..2} = 2;
var out3 : {0..2} = 2;
var b3_0 : {0..2} = 2;
var b3_1 : {0..2} = 2;
var out4 : {0..2} = 2;
var out5 : {0..2} = 2;
var out6 : {0..2} = 2;
var out7 : {0..2} = 2;
var out8 : {0..2} = 2;
var out9 : {0..2} = 2;
var out10 : {0..2} = 2;
var out11 : {0..2} = 2;
var out12 : {0..2} = 2;
var out13 : {0..2} = 2;
var out14 : {0..2} = 2;
var out15 : {0..2} = 2;
var out16 : {0..2} = 2;
var out17 : {0..2} = 2;
var out18 : {0..2} = 2;
var out19 : {0..2} = 2;
var out20 : {0..2} = 2;
var out21 : {0..2} = 2;
var out22 : {0..2} = 2;
var out23 : {0..2} = 2;
var out24 : {0..2} = 2;
var out25 : {0..2} = 2;
var out26 : {0..2} = 2;
var out27 : {0..2} = 2;
var out28 : {0..2} = 2;
var out29 : {0..2} = 2;
var out30 : {0..2} = 2;
var out31 : {0..2} = 2;
var out32 : {0..2} = 2;
var out33 : {0..2} = 2;
var out34 : {0..2} = 2;
var out35 : {0..2} = 2;
var out36 : {0..2} = 2;
var out37 : {0..2} = 2;
var out38 : {0..2} = 2;
var out39 : {0..2} = 2;
System = Node0()||| Node1()||| Node2()||| Node3()||| Node4()||| Inputs();
#define Err err==1;
#assert System reaches Err;

TimedAutomaton Node0
{
clock: t, x0;

	state down	
	inv: x0 &lt;= 100;
	trans: [[100 &lt;= x0 &amp;&amp; x0 &lt;= 200 &amp;&amp; t &lt;= 1000]] [out3 &lt; 2 &amp;&amp; out4 &lt; 2 &amp;&amp; out3 == 1 &amp;&amp; out4 == 1] tau { out0 = 1 } -&gt;up;
	trans: [[t &gt;= 1001]] tau { out0 = 2;out1 = 2;out2 = 2;out3 = 2;out4 = 2 } -&gt;down;
	trans: [[100 &lt;= x0 &amp;&amp; x0 &lt;= 200 ]] [out3 &lt; 2 &amp;&amp; out4 &lt; 2 &amp;&amp; !(out3 == 1 &amp;&amp; out4 == 1)] tau { out0 = 0 } -&gt;up;
	trans: [[x0 == 100 ]] [(out3 != 2 &amp;&amp; out4 != 2) == 0] tau &lt;x0&gt; -&gt;down;
	endstate

	state up	
	inv: x0 &lt;= 200;
	trans: [[x0 &lt;=200]] tau { out0 = 2 } &lt;x0&gt; -&gt;down;
	trans: [out0==1] tau { err = 1; } -&gt;err;
	endstate

	state err	
	endstate

}
TimedAutomaton Node1
{
clock: x1;

	state down	
	inv: x1 &lt;= 50;
	trans: [[50 &lt;= x1 &amp;&amp; x1 &lt;= 100 ]] [out5 &lt; 2 &amp;&amp; out6 &lt; 2 &amp;&amp; out7 &lt; 2 &amp;&amp; out8 &lt; 2 &amp;&amp; out9 &lt; 2 &amp;&amp; out10 &lt; 2 &amp;&amp; out11 &lt; 2 &amp;&amp; out12 &lt; 2 &amp;&amp; out13 &lt; 2 &amp;&amp; out14 &lt; 2 &amp;&amp; out15 &lt; 2 &amp;&amp; out16 &lt; 2 &amp;&amp; out17 &lt; 2 &amp;&amp; out18 &lt; 2 &amp;&amp; out19 &lt; 2 &amp;&amp; out20 &lt; 2 &amp;&amp; out21 &lt; 2 &amp;&amp; out22 &lt; 2 &amp;&amp; out23 &lt; 2 &amp;&amp; out24 &lt; 2 &amp;&amp; out25 &lt; 2 &amp;&amp; out26 &lt; 2 &amp;&amp; out27 &lt; 2 &amp;&amp; out28 &lt; 2 &amp;&amp; out29 &lt; 2 &amp;&amp; out30 &lt; 2 &amp;&amp; out31 &lt; 2 &amp;&amp; out32 &lt; 2 &amp;&amp; out33 &lt; 2 &amp;&amp; out34 &lt; 2 &amp;&amp; out35 &lt; 2 &amp;&amp; out36 &lt; 2 &amp;&amp; out37 &lt; 2 &amp;&amp; out38 &lt; 2 &amp;&amp; out39 &lt; 2 &amp;&amp; (out5+(out6+(out7+(out8+(out9+(out10+(out11+(out12+(out13+(out14+(out15+(out16+(out17+(out18+(out19+(out20+(out21+(out22+(out23+(out24+(out25+(out26+(out27+(out28+(out29+(out30+(out31+(out32+(out33+(out34+(out35+(out36+(out37+(out38+(out39))))))))))))))))))))))))))))))))))) &gt;= 10] tau { out1 = 1 } -&gt;up;
	trans: [[50 &lt;= x1 &amp;&amp; x1 &lt;= 100 ]] [out5 &lt; 2 &amp;&amp; out6 &lt; 2 &amp;&amp; out7 &lt; 2 &amp;&amp; out8 &lt; 2 &amp;&amp; out9 &lt; 2 &amp;&amp; out10 &lt; 2 &amp;&amp; out11 &lt; 2 &amp;&amp; out12 &lt; 2 &amp;&amp; out13 &lt; 2 &amp;&amp; out14 &lt; 2 &amp;&amp; out15 &lt; 2 &amp;&amp; out16 &lt; 2 &amp;&amp; out17 &lt; 2 &amp;&amp; out18 &lt; 2 &amp;&amp; out19 &lt; 2 &amp;&amp; out20 &lt; 2 &amp;&amp; out21 &lt; 2 &amp;&amp; out22 &lt; 2 &amp;&amp; out23 &lt; 2 &amp;&amp; out24 &lt; 2 &amp;&amp; out25 &lt; 2 &amp;&amp; out26 &lt; 2 &amp;&amp; out27 &lt; 2 &amp;&amp; out28 &lt; 2 &amp;&amp; out29 &lt; 2 &amp;&amp; out30 &lt; 2 &amp;&amp; out31 &lt; 2 &amp;&amp; out32 &lt; 2 &amp;&amp; out33 &lt; 2 &amp;&amp; out34 &lt; 2 &amp;&amp; out35 &lt; 2 &amp;&amp; out36 &lt; 2 &amp;&amp; out37 &lt; 2 &amp;&amp; out38 &lt; 2 &amp;&amp; out39 &lt; 2 &amp;&amp; (out5+(out6+(out7+(out8+(out9+(out10+(out11+(out12+(out13+(out14+(out15+(out16+(out17+(out18+(out19+(out20+(out21+(out22+(out23+(out24+(out25+(out26+(out27+(out28+(out29+(out30+(out31+(out32+(out33+(out34+(out35+(out36+(out37+(out38+(out39))))))))))))))))))))))))))))))))))) &lt; 10] tau { out1 = 0 } -&gt;up;
	trans: [[x1 == 50 ]] [(out5 != 2 &amp;&amp; (out6 != 2 &amp;&amp; (out7 != 2 &amp;&amp; (out8 != 2 &amp;&amp; (out9 != 2 &amp;&amp; (out10 != 2 &amp;&amp; (out11 != 2 &amp;&amp; (out12 != 2 &amp;&amp; (out13 != 2 &amp;&amp; (out14 != 2 &amp;&amp; (out15 != 2 &amp;&amp; (out16 != 2 &amp;&amp; (out17 != 2 &amp;&amp; (out18 != 2 &amp;&amp; (out19 != 2 &amp;&amp; (out20 != 2 &amp;&amp; (out21 != 2 &amp;&amp; (out22 != 2 &amp;&amp; (out23 != 2 &amp;&amp; (out24 != 2 &amp;&amp; (out25 != 2 &amp;&amp; (out26 != 2 &amp;&amp; (out27 != 2 &amp;&amp; (out28 != 2 &amp;&amp; (out29 != 2 &amp;&amp; (out30 != 2 &amp;&amp; (out31 != 2 &amp;&amp; (out32 != 2 &amp;&amp; (out33 != 2 &amp;&amp; (out34 != 2 &amp;&amp; (out35 != 2 &amp;&amp; (out36 != 2 &amp;&amp; (out37 != 2 &amp;&amp; (out38 != 2 &amp;&amp; (out39 != 2))))))))))))))))))))))))))))))))))) == 0] tau &lt;x1&gt; -&gt;down;
	endstate

	state up	
	inv: x1 &lt;= 100;
	trans: [[x1 &lt;=100]] tau { out1 = 2 } &lt;x1&gt; -&gt;down;
	endstate

}
TimedAutomaton Node2
{
clock: x2;

	state down	
	inv: x2 &lt;= 200;
	trans: [[200 &lt;= x2 &amp;&amp; x2 &lt;= 400 ]] [out5 &lt; 2 &amp;&amp; out6 &lt; 2 &amp;&amp; out7 &lt; 2 &amp;&amp; out8 &lt; 2 &amp;&amp; out9 &lt; 2 &amp;&amp; out10 &lt; 2 &amp;&amp; out11 &lt; 2 &amp;&amp; out12 &lt; 2 &amp;&amp; out13 &lt; 2 &amp;&amp; out14 &lt; 2 &amp;&amp; out15 &lt; 2 &amp;&amp; out16 &lt; 2 &amp;&amp; out17 &lt; 2 &amp;&amp; out18 &lt; 2 &amp;&amp; out19 &lt; 2 &amp;&amp; out20 &lt; 2 &amp;&amp; out21 &lt; 2 &amp;&amp; out22 &lt; 2 &amp;&amp; out23 &lt; 2 &amp;&amp; out24 &lt; 2 &amp;&amp; out1 &lt; 2 &amp;&amp; (out5+(out6+(out7+(out8+(out9+(out10+(out11+(out12+(out13+(out14+(out15+(out16+(out17+(out18+(out19+(out20+(out21+(out22+(out23+(out24+(out1))))))))))))))))))))) &gt;= 10] tau { out2 = 1 } -&gt;up;
	trans: [[200 &lt;= x2 &amp;&amp; x2 &lt;= 400 ]] [out5 &lt; 2 &amp;&amp; out6 &lt; 2 &amp;&amp; out7 &lt; 2 &amp;&amp; out8 &lt; 2 &amp;&amp; out9 &lt; 2 &amp;&amp; out10 &lt; 2 &amp;&amp; out11 &lt; 2 &amp;&amp; out12 &lt; 2 &amp;&amp; out13 &lt; 2 &amp;&amp; out14 &lt; 2 &amp;&amp; out15 &lt; 2 &amp;&amp; out16 &lt; 2 &amp;&amp; out17 &lt; 2 &amp;&amp; out18 &lt; 2 &amp;&amp; out19 &lt; 2 &amp;&amp; out20 &lt; 2 &amp;&amp; out21 &lt; 2 &amp;&amp; out22 &lt; 2 &amp;&amp; out23 &lt; 2 &amp;&amp; out24 &lt; 2 &amp;&amp; out1 &lt; 2 &amp;&amp; (out5+(out6+(out7+(out8+(out9+(out10+(out11+(out12+(out13+(out14+(out15+(out16+(out17+(out18+(out19+(out20+(out21+(out22+(out23+(out24+(out1))))))))))))))))))))) &lt; 10] tau { out2 = 0 } -&gt;up;
	trans: [[x2 == 200 ]] [(out5 != 2 &amp;&amp; (out6 != 2 &amp;&amp; (out7 != 2 &amp;&amp; (out8 != 2 &amp;&amp; (out9 != 2 &amp;&amp; (out10 != 2 &amp;&amp; (out11 != 2 &amp;&amp; (out12 != 2 &amp;&amp; (out13 != 2 &amp;&amp; (out14 != 2 &amp;&amp; (out15 != 2 &amp;&amp; (out16 != 2 &amp;&amp; (out17 != 2 &amp;&amp; (out18 != 2 &amp;&amp; (out19 != 2 &amp;&amp; (out20 != 2 &amp;&amp; (out21 != 2 &amp;&amp; (out22 != 2 &amp;&amp; (out23 != 2 &amp;&amp; (out24 != 2 &amp;&amp; (out1 != 2))))))))))))))))))))) == 0] tau &lt;x2&gt; -&gt;down;
	endstate

	state up	
	inv: x2 &lt;= 400;
	trans: [[x2 &lt;=400]] tau { out2 = 2 } &lt;x2&gt; -&gt;down;
	endstate

}
TimedAutomaton Node3
{
clock: x3;

	state down	
	inv: x3 &lt;= 300;
	trans: [[300 &lt;= x3 &amp;&amp; x3 &lt;= 600 ]] [out1 &lt; 2 &amp;&amp; out2 &lt; 2 &amp;&amp; !(out1 == 0 &amp;&amp; out2 == 0)] tau { out3 = 1 } -&gt;up;
	trans: [[300 &lt;= x3 &amp;&amp; x3 &lt;= 600 ]] [out1 &lt; 2 &amp;&amp; out2 &lt; 2 &amp;&amp; out1 == 0 &amp;&amp; out2 == 0] tau { out3 = 0 } -&gt;up;
	trans: [[x3 == 300 ]] [(out1 != 2 &amp;&amp; out2 != 2) == 0] tau &lt;x3&gt; -&gt;down;
	endstate

	state up	
	inv: x3 &lt;= 600;
	trans: [[x3 &lt;=600]] tau { out3 = 2 } &lt;x3&gt; -&gt;down;
	endstate

}
TimedAutomaton Node4
{
clock: x4;

	state down	
	inv: x4 &lt;= 250;
	trans: [[250 &lt;= x4 &amp;&amp; x4 &lt;= 500 ]] [out2&lt;2 &amp;&amp; (1-out2)==1] tau { out4 = 1 } -&gt;up;
	trans: [[250 &lt;= x4 &amp;&amp; x4 &lt;= 500 ]] [out2&lt;2 &amp;&amp; (1-out2) ==0] tau { out4 = 0 } -&gt;up;
	trans: [[x4 == 250 ]] [out2 == 2] tau &lt;x4&gt; -&gt;down;
	endstate

	state up	
	inv: x4 &lt;= 500;
	trans: [[x4 &lt;=500]] tau { out4 = 2 } &lt;x4&gt; -&gt;down;
	endstate

}
TimedAutomaton Inputs
{

	state input_init	
	committed;
	trans: tau { out5 = 1 } -&gt;In5;
	trans: tau { out5 = 0 } -&gt;In5;
	endstate

	state In5	
	committed;
	trans: tau { out6 = 1 } -&gt;In6;
	trans: tau { out6 = 0 } -&gt;In6;
	endstate

	state In6	
	committed;
	trans: tau { out7 = 1 } -&gt;In7;
	trans: tau { out7 = 0 } -&gt;In7;
	endstate

	state In7	
	committed;
	trans: tau { out8 = 1 } -&gt;In8;
	trans: tau { out8 = 0 } -&gt;In8;
	endstate

	state In8	
	committed;
	trans: tau { out9 = 1 } -&gt;In9;
	trans: tau { out9 = 0 } -&gt;In9;
	endstate

	state In9	
	committed;
	trans: tau { out10 = 1 } -&gt;In10;
	trans: tau { out10 = 0 } -&gt;In10;
	endstate

	state In10	
	committed;
	trans: tau { out11 = 1 } -&gt;In11;
	trans: tau { out11 = 0 } -&gt;In11;
	endstate

	state In11	
	committed;
	trans: tau { out12 = 1 } -&gt;In12;
	trans: tau { out12 = 0 } -&gt;In12;
	endstate

	state In12	
	committed;
	trans: tau { out13 = 1 } -&gt;In13;
	trans: tau { out13 = 0 } -&gt;In13;
	endstate

	state In13	
	committed;
	trans: tau { out14 = 1 } -&gt;In14;
	trans: tau { out14 = 0 } -&gt;In14;
	endstate

	state In14	
	committed;
	trans: tau { out15 = 1 } -&gt;In15;
	trans: tau { out15 = 0 } -&gt;In15;
	endstate

	state In15	
	committed;
	trans: tau { out16 = 1 } -&gt;In16;
	trans: tau { out16 = 0 } -&gt;In16;
	endstate

	state In16	
	committed;
	trans: tau { out17 = 1 } -&gt;In17;
	trans: tau { out17 = 0 } -&gt;In17;
	endstate

	state In17	
	committed;
	trans: tau { out18 = 1 } -&gt;In18;
	trans: tau { out18 = 0 } -&gt;In18;
	endstate

	state In18	
	committed;
	trans: tau { out19 = 1 } -&gt;In19;
	trans: tau { out19 = 0 } -&gt;In19;
	endstate

	state In19	
	committed;
	trans: tau { out20 = 1 } -&gt;In20;
	trans: tau { out20 = 0 } -&gt;In20;
	endstate

	state In20	
	committed;
	trans: tau { out21 = 1 } -&gt;In21;
	trans: tau { out21 = 0 } -&gt;In21;
	endstate

	state In21	
	committed;
	trans: tau { out22 = 1 } -&gt;In22;
	trans: tau { out22 = 0 } -&gt;In22;
	endstate

	state In22	
	committed;
	trans: tau { out23 = 1 } -&gt;In23;
	trans: tau { out23 = 0 } -&gt;In23;
	endstate

	state In23	
	committed;
	trans: tau { out24 = 1 } -&gt;In24;
	trans: tau { out24 = 0 } -&gt;In24;
	endstate

	state In24	
	committed;
	trans: tau { out25 = 1 } -&gt;In25;
	trans: tau { out25 = 0 } -&gt;In25;
	endstate

	state In25	
	committed;
	trans: tau { out26 = 1 } -&gt;In26;
	trans: tau { out26 = 0 } -&gt;In26;
	endstate

	state In26	
	committed;
	trans: tau { out27 = 1 } -&gt;In27;
	trans: tau { out27 = 0 } -&gt;In27;
	endstate

	state In27	
	committed;
	trans: tau { out28 = 1 } -&gt;In28;
	trans: tau { out28 = 0 } -&gt;In28;
	endstate

	state In28	
	committed;
	trans: tau { out29 = 1 } -&gt;In29;
	trans: tau { out29 = 0 } -&gt;In29;
	endstate

	state In29	
	committed;
	trans: tau { out30 = 1 } -&gt;In30;
	trans: tau { out30 = 0 } -&gt;In30;
	endstate

	state In30	
	committed;
	trans: tau { out31 = 1 } -&gt;In31;
	trans: tau { out31 = 0 } -&gt;In31;
	endstate

	state In31	
	committed;
	trans: tau { out32 = 1 } -&gt;In32;
	trans: tau { out32 = 0 } -&gt;In32;
	endstate

	state In32	
	committed;
	trans: tau { out33 = 1 } -&gt;In33;
	trans: tau { out33 = 0 } -&gt;In33;
	endstate

	state In33	
	committed;
	trans: tau { out34 = 1 } -&gt;In34;
	trans: tau { out34 = 0 } -&gt;In34;
	endstate

	state In34	
	committed;
	trans: tau { out35 = 1 } -&gt;In35;
	trans: tau { out35 = 0 } -&gt;In35;
	endstate

	state In35	
	committed;
	trans: tau { out36 = 1 } -&gt;In36;
	trans: tau { out36 = 0 } -&gt;In36;
	endstate

	state In36	
	committed;
	trans: tau { out37 = 1 } -&gt;In37;
	trans: tau { out37 = 0 } -&gt;In37;
	endstate

	state In37	
	committed;
	trans: tau { out38 = 1 } -&gt;In38;
	trans: tau { out38 = 0 } -&gt;In38;
	endstate

	state In38	
	committed;
	trans: tau { out39 = 1 } -&gt;In39;
	trans: tau { out39 = 0 } -&gt;In39;
	endstate

	state In39	
	committed;
	trans: tau -&gt;end;
	endstate

	state end	
	endstate

}
</Declaration><Processes/></TA>
